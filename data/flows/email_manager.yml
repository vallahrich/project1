flows:
  email_manager:
    description: "Main flow that coordinates all email operations, maintaining context"
    nlu_trigger:
      - intent: check_email
    steps:
      - action: action_list_emails
      - noop: true
        next:
          - if: "slots.email_count = 0"
            then:
              - action: utter_no_new_mail
                next: END
          - else: select_email
      
      - id: select_email
        collect: selected_email
        description: "The email to read, by number, sender, or subject"
        utter: utter_ask_selected_email
      
      - id: show_selected_email
        action: action_read_selected_email
        next: ask_email_action
      
      - id: ask_email_action
        collect: email_action
        description: "What to do with the email (reply, label, delete, etc.)"
        utter: utter_ask_email_action
        next:
          - if: "slots.email_action = 'reply'"
            then: initiate_reply
          - if: "slots.email_action = 'label'"
            then: get_label_suggestions
          - if: "slots.email_action = 'next'"
            then: show_next_email
          - if: "slots.email_action = 'previous'"
            then: show_previous_email
          - if: "slots.email_action = 'return'"
            then: clear_slots_for_return
          - if: "slots.email_action = 'delete'"
            then: delete_email
          - if: "slots.email_action = 'mark_read'"
            then: mark_as_read
          - else: ask_email_action  # If we didn't understand, ask again
      
      - id: mark_as_read
        action: action_mark_as_read
        next: ask_next_action
      
      - id: clear_slots_for_return
        action: reset_email_slots
        next: show_inbox_after_clear

      - id: show_inbox_after_clear
        action: action_list_emails
        next: select_email 
      
      # Reply flow
      - id: initiate_reply
        action: action_initiate_reply
        next: get_reply_type
      
      - id: get_reply_type
        collect: reply_type
        description: "Type of reply (user_content, professional, casual, or custom)"
        next: select_input_prompt
        
      - id: select_input_prompt
        action: action_select_input_prompt
        next: get_user_reply_content
        
      - id: get_user_reply_content
        collect: user_input
        description: "User's content or instructions for the email reply"
        next: generate_reply_draft
            
      - id: generate_reply_draft
        action: action_generate_reply_draft
        next: review_draft
      
      - id: review_draft
        collect: review_option
        description: "What to do with the draft (send, edit, start over)"
        utter: utter_ask_draft_options
        next:
          - if: "slots.review_option = 'send'"
            then: send_email  # Go directly to send_email, skip confirm_send
          - if: "slots.review_option = 'edit'"
            then: edit_draft
          - if: "slots.review_option = 'start_over'"
            then: initiate_reply
          - else: cancel_draft
      
      - id: edit_draft
        collect: user_input
        description: "Content for editing the email draft"
        next: process_edit
      
      - id: process_edit
        action: validate_email_response
        next: show_edited_draft
      
      - id: show_edited_draft
        action: utter_confirm_edited_draft
        next: confirm_edited
      
      - id: confirm_edited
        collect: confirm_edited_draft
        description: "Confirmation to send edited draft"
        utter: utter_ask_send_edited
        next:
          - if: "slots.confirm_edited_draft = true"
            then: send_email  # Go directly to send_email
          - else: cancel_draft
      
      # Removed the unreachable confirm_send step
      
      - id: send_email
        action: action_send_reply
        next: show_success_message
      
      - id: show_success_message
        action: utter_email_sent
        next: ask_next_action
      
      - id: cancel_draft
        action: utter_email_not_sent
        next: ask_next_action
      
      # Labeling flow
      - id: get_label_suggestions
        action: action_get_label_suggestions
        next: choose_label
      
      - id: choose_label
        collect: label_choice
        description: "The label to apply"
        utter: utter_ask_label_choice
        next: apply_label
      
      - id: apply_label
        action: action_apply_selected_label
        next: ask_next_action
      
      # Navigation flow
      - id: show_next_email
        set_slots:
          - navigation_direction: "next"
        next: navigate_email
      
      - id: show_previous_email
        set_slots:
          - navigation_direction: "previous"
        next: navigate_email
      
      - id: navigate_email
        action: action_navigate_emails
        next: ask_email_action
      
      # Email actions
      - id: delete_email
        action: action_delete_email
        next: ask_next_action
      
      - id: ask_next_action
        collect: next_action
        description: "What to do next after email operation"
        utter: utter_ask_next_action
        next:
          - if: "slots.next_action = 'return_to_inbox'"
            then: clear_slots_for_return
          - if: "slots.next_action = 'check_new_emails'"
            then: reset_slots_step  # Reset slots before checking
          - if: "slots.next_action = 'next_email'"
            then: show_next_email
          - if: "slots.next_action = 'mark_read'"
            then: mark_as_read
          - else: reset_slots_step # Default to reset slots

      # Then add a new step to reset slots
      - id: reset_slots_step
        action: reset_email_slots  # Add this new action in your actions folder
        next: END
      
